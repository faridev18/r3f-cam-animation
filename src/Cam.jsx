/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";

export function Cam(props) {
  const { nodes, materials } = useGLTF("/cctv-camera.glb");
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube.geometry}
        material={materials["Material.002"]}
        position={[0, 1.016, 0.254]}
        scale={1.284}
      />
      <group position={[0, 0.988, 0]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube002_1.geometry}
          material={materials["Material.001"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube002_2.geometry}
          material={materials["Material.005"]}
        />
      </group>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube002.geometry}
        material={materials["Material.003"]}
        position={[0, 0.988, 0.373]}
        scale={1.113}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube003.geometry}
        material={materials["Material.006"]}
        position={[0.093, 0.988, -1.641]}
        scale={1.046}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube004.geometry}
        material={materials.Material}
        position={[0, -0.742, -2.623]}
        scale={[0.072, 0.235, 2.942]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder.geometry}
        material={nodes.Cylinder.material}
        position={[0, -0.63, 0.289]}
        scale={[0.101, 0.382, 0.101]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube005.geometry}
        material={materials["Material.003"]}
        position={[0, -0.041, 0.281]}
        scale={[0.252, 0.252, 0.271]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube006.geometry}
        material={materials.SILVER}
        position={[0, 0.224, -1.594]}
        scale={0.157}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder001.geometry}
        material={materials.SILVER}
        position={[0, 0.29, 0.456]}
        scale={[0.03, 0.112, 0.03]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder002.geometry}
        material={materials.SILVER}
        position={[0, 0.29, 0.091]}
        scale={[0.03, 0.112, 0.03]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder003.geometry}
        material={materials.SILVER}
        position={[0.838, 1.068, 2.374]}
        rotation={[Math.PI / 2, 0, Math.PI]}
        scale={-0.051}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder004.geometry}
        material={materials["SILVER.001"]}
        position={[-0.848, 1.068, 2.374]}
        rotation={[Math.PI / 2, 0, Math.PI]}
        scale={-0.051}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder006.geometry}
        material={materials["SILVER.003"]}
        position={[0.838, 0.366, 2.374]}
        rotation={[Math.PI / 2, 0, Math.PI]}
        scale={-0.051}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder005.geometry}
        material={materials["SILVER.002"]}
        position={[-0.848, 0.366, 2.374]}
        rotation={[Math.PI / 2, 0, Math.PI]}
        scale={-0.051}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.BezierCurve.geometry}
        material={materials.Material}
      />
    </group>
  );
}

useGLTF.preload("/cctv-camera.glb");
